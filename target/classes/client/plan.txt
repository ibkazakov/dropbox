План клиента.

I. Список объектов, получаемых клиентом.
1) JSONAnswer - в ответ на любую команду. Может быть success = true\false.
Во всех случаях, кроме get\post, команда считается уже свершенной.
2) JSONFilePart - часть файла. После запроса файла командой get
3) JSONFileList - после команды getfilelist. Результат - обновление мнения.
4) JSONEndTransmission - после успешного завершения операции post


II. Внутреннее состояние клиента.
Внутренее состояние клиента суть его мнение о том, что находится на сервере.

Мнение может меняться в случае приема:
- JSONAnswer
- JSONEndTransmission
- JSONFileList
И во всех операциях, кроме операции get.

Поэтому целесообразно перенести обработку JSONFileList и JSONEndTransimittion в AnswerAcceptor, где и будет размещаться
единая ссылка на мнение клиента. Отдельный FileListAcceptor не нужен.

III. Описание последовательности действий комадны get.
1) Клиент отправляет серверу JSONCommand type = "get"
2) Сервер принимает эту команду и региструет новый файл на отправку в FileSender
3) После чего высылает ответ JSONAnswer, содержащий зарегистрированный fileID
4) Клиент принимает JSONAnswer и регистрирует новый файл к приему в FilePartAccepter по полученному fileID.
5) После чего клиент высылает серверу соответвующий JSONGiveFile
6) FileSender сервера принимает JSONGiveFile. Приизводит высылку FilePart-ов
7) При получении последнего FilePart FilePartAccepter высылает на сервер JSONEndTransmittion.
8) Сервер получает JSONEndTransmission, и производит дерегистрацию отправленного файла в FileSender.

IV. Описание последовательности действий команды post.
1) Клиент отправляет серверу JSONCommand type = "post"
2) Сервер принимает эту команду и региструет новый файл на прием в FilePartAccepter
3) После чего высылает ответ JSONAnswer, содержащий зарегистрированный fileID
4) Клиент принимает JSONAnswer и регистрирует новый файл к передаче в FileSender по полученному fileID.
5) Клиент приказывает САМ СВОЕМУ FileSender начать передачу файла. В обход приема JSONGiveFile. Вызов send().
6) FileSender высылает FilePart-ы серверу.
7) Сервер получает FilePart-ы. При получении последнего filepart-а сервер высылает клиенту JSONTransmittionEnd
8) Клиент получает JSONEndTransmission, дерегистриует файл на отправку в FileSender, а также меняет мнение клиента.

V. AnswerAccepter
Принимает три вида объектов: JSONAnswer, JSONEndTransmission, JSONFileList
-JSONFileList:
передает методу update класса FileListOpinion
-JSONEndTransmittion:
обращается по uplink к fileSender, дерегистрирует файл.
передает методу post FileListOpinion
-JSONAnswer
высняет значение success. Если неуспешно, по передает своему методу error
при успешности передает своему методу с имением команды.
все методы, кроме get\post, передают методам FileListOpinion

Метод get региструет файл в FilePartAccepter, если файла с тем же именем у клиента нет.
Если такой файл есть, ничего не делает. Файл не будет зарегистрирован, а следовательно, filepart-ы приняты не будут.
согласно 5) происходит затем посылка JSONGiveFile.

Метод post регистрирует файл в FileSender. Далее, согласно 5), вызываем send(int fileID)

VI. FileListOpinion
Хранит мнение клиента о находящихся на сервере файлах. Это мнение может меняться в следующих случаях
- при получении JSONFileList
- при успешном выполнении комманд create_dir\move\delete
- при завершении команды post, сигнализируемом принятием JSONEndTransmittion
В методах поставлены заглушки.

VII. Посылатель команд класс ClientSender
Имеет непосредственный доступ к посыылке через Channel serverChannel

VIII. ClientHandler
Непосредственно подключаемый в pipeline хэндлер. Может находится в режимах authMode = true\false
В режиме authMode = true принимат JSONAuthAnswer, в случае успеха полагает authMode = false
Также содержит метод tryAuth, посылающий запрос на попытку аутентификации.
В режиме authMode = false посылает входящее сообщение в ClientAccepter
- при включении в канал раздает channel всем Senders
- для доступа к отправлению команд предназначен метод getClientSender
- При выключении\исключении вызывает clear.

IX. ClientThread
Запускаемый клиент. Доступ к проиизвольной отправке комманд дается через доступ к ссылке ClientHandler,
выдача ссылки заграждена барьером ожидания, снимающимся в момент завершения инициализации.